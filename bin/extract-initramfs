#!/bin/bash

# Name: extract-initramfs
# Author: Ruulian
# Version: v1.1
# Github: https://github.com/Ruulian/initramfs-toolkit


INPUT_FILE=""
OUTPUT_DEFAULT="initrd-root"
OVERWRITE=false

OUTPUT_DIR=$OUTPUT_DEFAULT

print_help() {
    echo "Usage: $0 initrd/initramfs [-o output_directory] [-f]"
    echo ""
    echo "Options:"
    echo "  -o : Specify the output directory (default: '$OUTPUT_DEFAULT')"
    echo "  -f : Force creation of output directory (overwrite if already exists)"
    echo "  -h : Print this help message"
    exit 1
}

log_error()
{
    echo "Error: $1" 1>&2
    exit 1
}


# Parse options
while [[ $# -gt 0 ]]; do
    case "$1" in
        -o )
            OUTPUT_DIR="$2"
            shift 2
            ;;
        -f )
            OVERWRITE=true
            shift
            ;;
        -h )
            print_help
            exit 0
            ;;
        * )
            INPUT_FILE="$1"
            shift
            ;;
    esac
done

if [ -z "$INPUT_FILE" ]; then
    print_help
fi

if [ ! -f "$INPUT_FILE" ]; then
    log_error "No such file or directory '$INPUT_FILE'"
fi

if [ -d "$OUTPUT_DIR" ] && [ $OVERWRITE == false ]; then
    log_error "Output directory '$OUTPUT_DIR' already exists (specify -f to overwrite)"
else 
    if [ -d "$OUTPUT_DIR" ]; then
        rm -r "$OUTPUT_DIR"
    fi
fi

SCRIPTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

declare -A exts
exts["gzip"]="zcat"
exts["bzip2"]="bzcat"
exts["LZ4"]="lz4cat"
exts["LZMA"]="lzcat"
exts["lzop"]="extract_lzop"
exts["XZ"]="xzcat"
exts["Zstandard"]="zstdcat"
exts["cpio"]="cat"

extract_lzop()
{
    SCRIPT_NAME=$(basename "$1")
    COPY="bf072e_$SCRIPT_NAME"

    cp "$1" "$COPY"

    lzop -d "$COPY"
    
    CREATED_FILE=$(echo $COPY | sed 's/\.[^.]*$//')

    cat $CREATED_FILE

    rm $CREATED_FILE
    rm $COPY
}

extract_part()
{
    INITRAMFS="$1"

    START_OFFSET=0

    if [ ! -z "$2" ]; then
        START_OFFSET="$2"
    fi

    LEN=$(dd if="$INITRAMFS" skip="$START_OFFSET" status=none | wc -c)

    if [ $LEN == 0 ]; then
        echo -1
        return
    fi

    PART_TYPE=$(dd if="$INITRAMFS" skip="$START_OFFSET" status=none | file -)

    for key in "${!exts[@]}"; do
        if [[ $PART_TYPE == *" $key "* ]]; then
            break
        fi
    done

    RES=$(
        dd if="$INITRAMFS" skip="$START_OFFSET" status=none | eval "${exts[$key]} -" | cpio -imdv 2>&1 | grep blocks
    )
    BLOCKS=$(echo -ne "$RES" | sed -E 's/([0-9]+) blocks/\1/')

    echo $(("$START_OFFSET" + "$BLOCKS"))
}

INITRAMFS="$(realpath $INPUT_FILE)"

mkdir -p "$OUTPUT_DIR"
cd "$OUTPUT_DIR"

NEXT=0

while [ "$NEXT" -ge 0 ]; do
    NEXT=$(extract_part "$INITRAMFS" "$NEXT")
done

cd - > /dev/null
